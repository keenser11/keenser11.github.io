<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python与大漠插件的使用</title>
      <link href="/2022/04/15/hello-world/"/>
      <url>/2022/04/15/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="python与大漠插件的使用"><a href="#python与大漠插件的使用" class="headerlink" title="python与大漠插件的使用"></a>python与大漠插件的使用</h2><h3 id="Anaconda的安装"><a href="#Anaconda的安装" class="headerlink" title="Anaconda的安装"></a>Anaconda的安装</h3><p>使用Anaconda工具管理python的环境</p><p>官网下载anaconda</p><p><a href="https://www.anaconda.com/">https://www.anaconda.com/</a></p><p>安装</p><p><img src="/2022/04/15/hello-world/image-20220415151339249.png" alt="image-20220415151339249"></p><p>测试安装是否成功</p><p>cmd</p><p><img src="/2022/04/15/hello-world/image-20220415151507224.png" alt="image-20220415151507224"></p><h3 id="python-32位环境的准备"><a href="#python-32位环境的准备" class="headerlink" title="python 32位环境的准备"></a>python 32位环境的准备</h3><p>因为大漠插件只能支持32位python</p><p>安装的是64位的conda，所以默认的python，甚至默认的虚拟环境也是 64 位的，通过百度，得知win10 有一个32 位的模式，先切换到32位模式：</p><p>set CONDA_FORCE_32BIT=1</p><p>切换成功不会有任何的提示信息</p><p>创建python环境</p><p>我这里使用3.7</p><p>conda create -n 你的虚拟环境名称 python=x.x</p><p>创建完成后，就可以关闭系统的32位模式</p><p>set CONDA_FORCE_32BIT=0</p><h3 id="pycharm的conda-python虚拟环境使用"><a href="#pycharm的conda-python虚拟环境使用" class="headerlink" title="pycharm的conda python虚拟环境使用"></a>pycharm的conda python虚拟环境使用</h3><p><img src="/2022/04/15/hello-world/image-20220415152203437.png" alt="image-20220415152203437"></p><p><img src="/2022/04/15/hello-world/image-20220415152244417.png" alt="image-20220415152244417"></p><h3 id="大漠插件的安装"><a href="#大漠插件的安装" class="headerlink" title="大漠插件的安装"></a>大漠插件的安装</h3><p>下载大漠工具包</p><p>dm3.1233</p><p>这里使用的版本是最后免费版本，之后的版本是收费版本</p><p><img src="/2022/04/15/hello-world/image-20220415152357703.png" alt="image-20220415152357703"></p><p>注册dm.dll</p><p>管理员运行cmd（也可直接执行“注册大漠插件到系统.bat”）</p><p>regsvr32 dm.dll</p><p><img src="/2022/04/15/hello-world/image-20220415152630104.png" alt="image-20220415152630104"></p><h3 id="大漠综合工具之取色识字（字库）"><a href="#大漠综合工具之取色识字（字库）" class="headerlink" title="大漠综合工具之取色识字（字库）"></a>大漠综合工具之取色识字（字库）</h3><p>抓图</p><p><img src="/2022/04/15/hello-world/image-20220415152805789.png" alt="image-20220415152805789"></p><p>取字色（勾选生效）</p><p><img src="/2022/04/15/hello-world/image-20220415152839761.png" alt="image-20220415152839761"></p><p>字色多种颜色可设定区间值（偏色）</p><p><img src="/2022/04/15/hello-world/image-20220415152916762.png" alt="image-20220415152916762"></p><p>提取点阵（单个，多个）</p><p><img src="/2022/04/15/hello-world/image-20220415152955781.png" alt="image-20220415152955781"></p><p>定义文字，回车添加到字库（字库可自行新建）</p><p><img src="/2022/04/15/hello-world/image-20220415153048266.png" alt="image-20220415153048266"></p><h3 id="python大漠插件的使用"><a href="#python大漠插件的使用" class="headerlink" title="python大漠插件的使用"></a>python大漠插件的使用</h3><p>安装pywin32</p><p><img src="/2022/04/15/hello-world/image-20220415153256065.png" alt="image-20220415153256065"></p><p>引入与调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This is a sample Python script.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Press Shift+F10 to execute it or replace it with your code.</span></span><br><span class="line"><span class="comment"># Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> win32com.client</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用大漠插件</span></span><br><span class="line">dm = win32com.client.Dispatch(<span class="string">&quot;dm.dmsoft&quot;</span>)</span><br><span class="line"><span class="comment"># 设定字库文件，建议在初始化中调用，比较耗时</span></span><br><span class="line">dm.setDict(<span class="number">0</span>, <span class="string">&quot;D:/PycharmProjects/tools/dmzk/三国塔防字库.txt&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_hi</span>(<span class="params">name</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(dm.ver())</span><br><span class="line">    <span class="comment"># 使用字库</span></span><br><span class="line">    dm.useDict(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    函数原型:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    string FindStrEx(x1,y1,x2,y2,string,color_format,sim)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    参数定义:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    x1 整形数:区域的左上X坐标</span></span><br><span class="line"><span class="string">    y1 整形数:区域的左上Y坐标</span></span><br><span class="line"><span class="string">    x2 整形数:区域的右下X坐标</span></span><br><span class="line"><span class="string">    y2 整形数:区域的右下Y坐标</span></span><br><span class="line"><span class="string">    string 字符串:待查找的字符串, 可以是字符串组合，比如&quot;长安|洛阳|大雁塔&quot;,中间用&quot;|&quot;来分割字符串</span></span><br><span class="line"><span class="string">    color_format 字符串:颜色格式串, 可以包含换行分隔符,语法是&quot;,&quot;后加分割字符串. 具体可以查看下面的示例.注意，RGB和HSV格式都支持.</span></span><br><span class="line"><span class="string">    sim 双精度浮点数:相似度,取值范围0.1-1.0</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># ret = dm.FindStrFastE(157,695,424,714, &quot;司马懿&quot;, &quot;e6e0d2-c1a984&quot;, 0.9)</span></span><br><span class="line">    ret = dm.FindStrFastE(<span class="number">157</span>,<span class="number">695</span>,<span class="number">424</span>,<span class="number">714</span>, <span class="string">&quot;孙坚&quot;</span>, <span class="string">&quot;e6e0d2-c1a984&quot;</span>, <span class="number">0.9</span>)</span><br><span class="line"></span><br><span class="line">    ret = ret.split(<span class="string">&quot;|&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(ret[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> ret[<span class="number">0</span>] == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;find the word&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Press the green button in the gutter to run the script.</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    print_hi(<span class="string">&#x27;PyCharm&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># See PyCharm help at https://www.jetbrains.com/help/pycharm/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python与大漠插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/04/15/python-yu-da-mo-cha-jian-de-shi-yong/"/>
      <url>/2022/04/15/python-yu-da-mo-cha-jian-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>windows环境下修改mysql无法使用远程Ip连接问题</title>
      <link href="/2022/01/17/windows-huan-jing-xia-xiu-gai-mysql-wu-fa-shi-yong-yuan-cheng-ip-lian-jie-wen-ti/"/>
      <url>/2022/01/17/windows-huan-jing-xia-xiu-gai-mysql-wu-fa-shi-yong-yuan-cheng-ip-lian-jie-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>今天遇到一个比较恶心的问题，mysql安装在windows环境，安装完成后无法使用远程ip连接，经过修改root的连接范围为指定Ip、%通配符等方式都无法解决问题，都会提示无法连接1045-Access denied for user ‘root‘@’xxxx’ 问题</p><p>修改如下：</p><p><img src="/2022/01/17/windows-huan-jing-xia-xiu-gai-mysql-wu-fa-shi-yong-yuan-cheng-ip-lian-jie-wen-ti/image-20220117173925904.png" alt="image-20220117173925904"></p><p>后来经过测试，解决方式是修改配置文件（注意windows安装的mysql配置文件为mysql.ini）</p><p>如下图：将bind-address修改为 0.0.0.0，重启服务</p><p><img src="/2022/01/17/windows-huan-jing-xia-xiu-gai-mysql-wu-fa-shi-yong-yuan-cheng-ip-lian-jie-wen-ti/image-20220117174117112.png" alt="image-20220117174117112"></p><p>注意，启用的mysql服务是那个有指定配置文件的（linux启动服务指定mysql数据库配置）,而不是上面那两个无指定配置的服务</p><p><img src="/2022/01/17/windows-huan-jing-xia-xiu-gai-mysql-wu-fa-shi-yong-yuan-cheng-ip-lian-jie-wen-ti/image-20220117174327224.png" alt="image-20220117174327224"></p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo搭配github搭建博客</title>
      <link href="/2022/01/14/hexo-da-pei-github-da-jian-bo-ke/"/>
      <url>/2022/01/14/hexo-da-pei-github-da-jian-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="博客搭建（采用hexo框架-部署到github）"><a href="#博客搭建（采用hexo框架-部署到github）" class="headerlink" title="博客搭建（采用hexo框架-部署到github）"></a>博客搭建（采用hexo框架-部署到github）</h1><h2 id="1-前期准备"><a href="#1-前期准备" class="headerlink" title="1.前期准备"></a>1.前期准备</h2><h3 id="1-1-注意事项"><a href="#1-1-注意事项" class="headerlink" title="1.1 注意事项"></a>1.1 注意事项</h3><ul><li>挂vpn途中使用git clone可能会出现无法clone的情况</li><li>cnpm无法下载可尝试npm</li><li>途中使用的命令建议在git bash中执行</li><li>本文使用的hexo版本 6.0.0</li><li>hexo有两种_config.yml文件，一个是根目录下的全局_config.yml，一个是各个theme下的</li><li>提交部署至github(hexo clean 清理 hexo g 编译 hexo d 提交)（创建：hexo new “post title with whitespace”）</li></ul><h3 id="1-2-下载并安装node-js"><a href="#1-2-下载并安装node-js" class="headerlink" title="1.2 下载并安装node.js"></a>1.2 下载并安装node.js</h3><ul><li>官网下载地址：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a></li><li>安装完成验证：node -v</li></ul><h3 id="1-3-下载并安装git"><a href="#1-3-下载并安装git" class="headerlink" title="1.3 下载并安装git"></a>1.3 下载并安装git</h3><ul><li>官网下载：<a href="https://git-scm.com/">https://git-scm.com/</a></li><li>安装完成验证：git -v</li></ul><h3 id="1-4-命令行安装cnpm"><a href="#1-4-命令行安装cnpm" class="headerlink" title="1.4 命令行安装cnpm"></a>1.4 命令行安装cnpm</h3><ul><li>命令：npm install -g cnpm –registry==<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></li><li>安装完成验证：cnpm -v</li></ul><h3 id="1-5-命令行安装hexo"><a href="#1-5-命令行安装hexo" class="headerlink" title="1.5 命令行安装hexo"></a>1.5 命令行安装hexo</h3><ul><li>命令：cnpm install -g hexo-cli</li><li>安装完成验证：hexo -v</li></ul><h2 id="2-配置github"><a href="#2-配置github" class="headerlink" title="2.配置github"></a>2.配置github</h2><h3 id="2-1-在github上创建仓库"><a href="#2-1-在github上创建仓库" class="headerlink" title="2.1 在github上创建仓库"></a>2.1 在github上创建仓库</h3><p>创建：</p><ul><li><p>新建一个名为你的用户名.github.io的仓库</p></li><li><p>比如说，如果你的github用户名是test，那么你就新建test.github.io的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <a href="http://test.github.io/">http://test.github.io</a> 了，是不是很方便？由此可见，每一个github账户最多只能创建一个这样可以直接使用域名访问的仓库。</p></li></ul><p>注意：</p><ol><li><p>注册的邮箱一定要验证，否则不会成功；</p></li><li><p>仓库名字必须是：username.github.io，其中username是你的用户名；</p></li><li><p>仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久；</p></li><li><p>创建页面如下（警告忽略，我已经创建过了）</p></li></ol><p><img src="/2022/01/14/hexo-da-pei-github-da-jian-bo-ke/1642126952(1).jpg"></p><p>创建成功后，默认会在你这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。</p><h3 id="2-2-绑定域名（这步可省略）"><a href="#2-2-绑定域名（这步可省略）" class="headerlink" title="2.2 绑定域名（这步可省略）"></a>2.2 绑定域名（这步可省略）</h3><p>当然，你不绑定域名肯定也是可以的，就用默认的 xxx.github.io 来访问，如果你想更个性一点，想拥有一个属于自己的域名，那也是OK的。</p><p>首先你要注册一个域名，域名注册以前总是推荐去godaddy，现在觉得其实国内的阿里云也挺不错的，价格也不贵，毕竟是大公司，放心！</p><p>绑定域名分2种情况：带www和不带www的。</p><p>域名配置最常见有2种方式，CNAME和A记录，CNAME填写域名，A记录填写IP，由于不带www方式只能采用A记录，所以必须先ping一下你的用户名.github.io的IP，然后到你的域名DNS设置页，将A记录指向你ping出来的IP，将CNAME指向你的用户名.github.io，这样可以保证无论是否添加www都可以访问，如下：</p><p><img src="/2022/01/14/hexo-da-pei-github-da-jian-bo-ke/112233.jpg" alt="img"></p><p>然后到你的github项目根目录新建一个名为CNAME的文件（无后缀），里面填写你的域名，加不加www看你自己喜好，因为经测试： </p><ul><li><p>如果你填写的是没有www的，比如 mygit.me，那么无论是访问 <a href="http://www.mygit.me/">http://www.mygit.me</a> 还是 <a href="http://mygit.me/">http://mygit.me</a> ，都会自动跳转到 <a href="http://mygit.me/">http://mygit.me</a></p></li><li><p>如果你填写的是带www的，比如 <a href="http://www.mygit.me/">www.mygit.me</a> ，那么无论是访问 <a href="http://www.mygit.me/">http://www.mygit.me</a> 还是 <a href="http://mygit.me/">http://mygit.me</a> ，都会自动跳转到 <a href="http://www.mygit.me/">http://www.mygit.me</a></p></li><li><p>如果你填写的是其它子域名，比如 abc.mygit.me，那么访问 <a href="http://abc.mygit.me/">http://abc.mygit.me</a> 没问题，但是访问 <a href="http://mygit.me/">http://mygit.me</a> ，不会自动跳转到 <a href="http://abc.mygit.me/">http://abc.mygit.me</a></p></li></ul><p>另外说一句，在你绑定了新域名之后，原来的你的用户名.github.io并没有失效，而是会自动跳转到你的新域名。</p><h2 id="3-配置SSH免密登录"><a href="#3-配置SSH免密登录" class="headerlink" title="3.配置SSH免密登录"></a>3.配置SSH免密登录</h2><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p><p>操作步骤：</p><p>第一步：首先打开电脑文件夹，找到C:\Users\xxx.ssh文件夹并删除</p><p>第二步：在C:\Users\xxx文件夹下右键打开Git Bash Here输入命令：ssh-keygen -t rsa -C github邮件地址   生成.ssh秘钥，输入后连敲三次回车，出现下图情况代表成功</p><p><img src="/2022/01/14/hexo-da-pei-github-da-jian-bo-ke/image-20220114104413586.png" alt="image-20220114104413586"></p><p>第三步：最终生成了一个新的 C:\Users\xxx.ssh文件夹，打开这个文件夹，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容</p><p>第四步：打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key，把复制的内容粘贴进去，title随便填，保存即可，我们的公钥就添加成功了，设置好如下图：</p><p><img src="/2022/01/14/hexo-da-pei-github-da-jian-bo-ke/image-20220114104622013.png" alt="image-20220114104622013"></p><p>第五步：检测是否设置成功：</p><p>输入命令：  $ ssh -T <a href="mailto:&#x67;&#105;&#116;&#64;&#103;&#105;&#116;&#104;&#117;&#x62;&#x2e;&#99;&#111;&#x6d;">&#x67;&#105;&#116;&#64;&#103;&#105;&#116;&#104;&#117;&#x62;&#x2e;&#99;&#111;&#x6d;</a> # 注意邮箱地址不用改</p><p>如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：</p><p>Hi liuxianan! You’ve successfully authenticated, but GitHub does not provide shell access.</p><p>看到这个信息说明SSH已配置成功！</p><p>第六步：此时你还需要配置：</p><p>$ git config –global user.name “xxx”// 你的github用户名，非昵称$ git config –global user.email  “<a href="mailto:&#120;&#x78;&#x78;&#x40;&#x71;&#x71;&#46;&#99;&#111;&#x6d;">&#120;&#x78;&#x78;&#x40;&#x71;&#x71;&#46;&#99;&#111;&#x6d;</a>“// 填写你的github注册邮箱 </p><h2 id="4-使用-hexo-搭建博客"><a href="#4-使用-hexo-搭建博客" class="headerlink" title="4.使用 hexo 搭建博客"></a>4.使用 hexo 搭建博客</h2><h3 id="4-1-初始化"><a href="#4-1-初始化" class="headerlink" title="4.1 初始化"></a>4.1 初始化</h3><p>第一步：在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是D:\hexocode，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放</p><p>第二步：在D:\hexocode文件夹下右键打开 Git Bash Here，输入hexo init 初始化</p><ul><li>hexo会自动下载一些文件到这个目录，包括node_modules，目录结构如下图：</li></ul><p><img src="/2022/01/14/hexo-da-pei-github-da-jian-bo-ke/image-20220114105036931.png" alt="image-20220114105036931"></p><p>第三步：执行以下命令之后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的：</p><p><img src="/2022/01/14/hexo-da-pei-github-da-jian-bo-ke/123.jpg" alt="img"></p><p>第四步：hexo s 是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故</p><p>到这里初始化就完成了</p><h3 id="4-2-将博客部署到-github-个人主页上"><a href="#4-2-将博客部署到-github-个人主页上" class="headerlink" title="4.2 将博客部署到 github 个人主页上"></a>4.2 将博客部署到 github 个人主页上</h3><p>第一步：在E:\xpzsData\hexocode目录下安装 hexo-deployer-git 插件</p><ul><li><p>安装命令： npm install hexo-deployer-git –save  </p></li><li><p>必须安装，否则执行hexo d 的话会报如下错误：</p></li></ul><p><img src="/2022/01/14/hexo-da-pei-github-da-jian-bo-ke/1122.jpg" alt="img"></p><p>第二步：编辑D:\hexocode目录下的 _config.yml 文件, 在文件末尾添加如下内容：</p><p><img src="/2022/01/14/hexo-da-pei-github-da-jian-bo-ke/image-20220114105344046.png" alt="image-20220114105344046"></p><ul><li>注意：其中 repo 中的内容即为 github 个人主页链接地址，具体看下图： </li></ul><p><img src="/2022/01/14/hexo-da-pei-github-da-jian-bo-ke/image-20220114105515159.png" alt="image-20220114105515159"></p><p>第三步：在D:\hexocode目录下, 输入命令：hexo d 将本地 blog 推送到 github仓库, 也可能需要输入 username &amp; pwd。 </p><p>推送成功后, 在浏览器中输入对应域名, 即可访问 <a href="https://keenser11.github.io/">https://keenser11.github.io/</a></p><h2 id="5-更换主题"><a href="#5-更换主题" class="headerlink" title="5.更换主题"></a>5.更换主题</h2><h3 id="5-1-寻找主题"><a href="#5-1-寻找主题" class="headerlink" title="5.1 寻找主题"></a>5.1 寻找主题</h3><ul><li><p>既然默认主题很丑，那我们别的不做，首先来替换一个好看点的主题。</p></li><li><p>这是hexo官网：<a href="https://hexo.io/themes/%EF%BC%8C%E5%8F%AF%E5%9C%A8%E9%87%8C%E9%9D%A2%E4%B8%8B%E8%BD%BD%E4%B8%BB%E9%A2%98%EF%BC%8C%E7%82%B9%E5%87%BB%E4%B8%BB%E9%A2%98%E5%90%8D%E5%8D%B3%E5%8F%AF%E8%B7%B3%E8%BD%AC%E5%88%B0github%E4%B8%8A%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E5%9C%A8github%E4%B8%8A%E6%90%9C%E7%B4%A2%E4%B8%BB%E9%A2%98">https://hexo.io/themes/，可在里面下载主题，点击主题名即可跳转到github上，也可以直接在github上搜索主题</a></p></li><li><p>在这里我使用github上一个大佬的主题blinkfox/hexo-theme-matery</p></li><li><p>链接：<a href="https://github.com/blinkfox/hexo-theme-matery">https://github.com/blinkfox/hexo-theme-matery</a>    </p></li></ul><h3 id="5-2-下载主题"><a href="#5-2-下载主题" class="headerlink" title="5.2 下载主题"></a>5.2 下载主题</h3><p>第一步：Git Bash Here中先cd到D:\hexocode目录</p><p>第二步：再输入命令 $ git clone 主题http链接  themes/主题名称</p><p><img src="/2022/01/14/hexo-da-pei-github-da-jian-bo-ke/888.jpg" alt="img"></p><p>注意：</p><p>D:\hexocode目录下的 theme 文件夹下存放的就是博客的主题，主题是否下载成功可到该目录下查看：</p><p><img src="/2022/01/14/hexo-da-pei-github-da-jian-bo-ke/image-20220114105917732.png" alt="image-20220114105917732"></p><h3 id="5-3-使用主题"><a href="#5-3-使用主题" class="headerlink" title="5.3 使用主题"></a>5.3 使用主题</h3><ul><li><p>打开D:\hexocode目录下的_config.yml文件，在里面找到theme: landscape改为theme: hexo-theme-matery   （hexo-theme-matery为我们要使用的主题名）,然后重新执行hexo g来重新生成。</p></li><li><p>如果出现一些莫名其妙的问题，可以先执行hexo clean来清理一下public的内容，然后再执行hexo g 和 hexo s 重新生成和发布。</p></li><li><p>再次在浏览器中输入对应域名, 即可发现主题已更换 </p></li></ul><h3 id="5-4-修改主题内容"><a href="#5-4-修改主题内容" class="headerlink" title="5.4 修改主题内容"></a>5.4 修改主题内容</h3><p>在这里我使用的是blinkfox主题，后期相关修改参考这个主题文档</p><p>文档链接：<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md</a></p><p>要把根目录下的_config.yml文件中的这些信息替换成自己的和设置中文 </p><p><img src="/2022/01/14/hexo-da-pei-github-da-jian-bo-ke/image-20220114110331857.png" alt="image-20220114110331857"></p><h2 id="6-利用Typora软件来写博客"><a href="#6-利用Typora软件来写博客" class="headerlink" title="6.利用Typora软件来写博客"></a>6.利用Typora软件来写博客</h2><h3 id="6-1-Typora介绍"><a href="#6-1-Typora介绍" class="headerlink" title="6.1 Typora介绍"></a>6.1 Typora介绍</h3><ul><li><p>Typora–一款简单高效的Markdown编辑器，保存后直接为md格式，Markdown中点击导入就可以。</p></li><li><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式，其目标是实现易读易写，说人话就是删减版的HTML语言</p></li><li><p>Markdown教程：<a href="https://www.runoob.com/markdown/md-tutorial.html">https://www.runoob.com/markdown/md-tutorial.html</a></p></li></ul><p>6.2 安装Typora</p><p>官网：<a href="https://www.typora.io/#windows">https://www.typora.io/#windows</a> </p><h2 id="7-HEXO插入图片"><a href="#7-HEXO插入图片" class="headerlink" title="7.HEXO插入图片"></a>7.HEXO插入图片</h2><h3 id="7-1安装插件，在hexo根目录打开Git-Bash-执行"><a href="#7-1安装插件，在hexo根目录打开Git-Bash-执行" class="headerlink" title="7.1安装插件，在hexo根目录打开Git Bash,执行"></a>7.1安装插件，在hexo根目录打开Git Bash,执行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><h3 id="7-2打开hexo的配置文件-config-yml"><a href="#7-2打开hexo的配置文件-config-yml" class="headerlink" title="7.2打开hexo的配置文件_config.yml"></a>7.2打开hexo的配置文件_config.yml</h3><p>找到 post_asset_folder，把这个选项从false改成true</p><h3 id="7-3打开-node-modules-hexo-asset-image-index-js"><a href="#7-3打开-node-modules-hexo-asset-image-index-js" class="headerlink" title="7.3打开/node_modules/hexo-asset-image/index.js"></a>7.3打开/node_modules/hexo-asset-image/index.js</h3><p>将内容更换为下面的代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&#x27;use strict&#x27;;</span><br><span class="line">var cheerio = require(&#x27;cheerio&#x27;);</span><br><span class="line"></span><br><span class="line">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span><br><span class="line">function getPosition(str, m, i) &#123;</span><br><span class="line">  return str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var version = String(hexo.version).split(&#x27;.&#x27;);</span><br><span class="line">hexo.extend.filter.register(&#x27;after_post_render&#x27;, function(data)&#123;</span><br><span class="line">  var config = hexo.config;</span><br><span class="line">  if(config.post_asset_folder)&#123;</span><br><span class="line">        var link = data.permalink;</span><br><span class="line">    if(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)</span><br><span class="line">       var beginPos = getPosition(link, &#x27;/&#x27;, 1) + 1;</span><br><span class="line">    else</span><br><span class="line">       var beginPos = getPosition(link, &#x27;/&#x27;, 3) + 1;</span><br><span class="line">    // In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span><br><span class="line">    var endPos = link.lastIndexOf(&#x27;/&#x27;) + 1;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    var toprocess = [&#x27;excerpt&#x27;, &#x27;more&#x27;, &#x27;content&#x27;];</span><br><span class="line">    for(var i = 0; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      var key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      var $ = cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: false,</span><br><span class="line">        xmlMode: false,</span><br><span class="line">        lowerCaseTags: false,</span><br><span class="line">        decodeEntities: false</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(&#x27;img&#x27;).each(function()&#123;</span><br><span class="line">        if ($(this).attr(&#x27;src&#x27;))&#123;</span><br><span class="line">            // For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span><br><span class="line">            var src = $(this).attr(&#x27;src&#x27;).replace(&#x27;\\&#x27;, &#x27;/&#x27;);</span><br><span class="line">            if(!/http[s]*.*|\/\/.*/.test(src) &amp;&amp;</span><br><span class="line">               !/^\s*\//.test(src)) &#123;</span><br><span class="line">              // For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span><br><span class="line">              // In addition, to support multi-level local directory.</span><br><span class="line">              var linkArray = link.split(&#x27;/&#x27;).filter(function(elem)&#123;</span><br><span class="line">                return elem != &#x27;&#x27;;</span><br><span class="line">              &#125;);</span><br><span class="line">              var srcArray = src.split(&#x27;/&#x27;).filter(function(elem)&#123;</span><br><span class="line">                return elem != &#x27;&#x27; &amp;&amp; elem != &#x27;.&#x27;;</span><br><span class="line">              &#125;);</span><br><span class="line">              if(srcArray.length &gt; 1)</span><br><span class="line">                srcArray.shift();</span><br><span class="line">              src = srcArray.join(&#x27;/&#x27;);</span><br><span class="line">              $(this).attr(&#x27;src&#x27;, config.root + link + src);</span><br><span class="line">              console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);</span><br><span class="line">            console.info&amp;&amp;console.info($(this));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="7-4现在就可以插入图片了，比如hexo-new-post-photo之后"><a href="#7-4现在就可以插入图片了，比如hexo-new-post-photo之后" class="headerlink" title="7.4现在就可以插入图片了，比如hexo new post photo之后"></a>7.4现在就可以插入图片了，比如hexo new post photo之后</h3><p>就在source/_posts生成photo.md文件和photo文件夹，我们把要插入的图片复制到photo文件夹内，<br> 在photo.md文件里面按markdown的标准写,（我的文件名是head.jpeg）比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![这是代替图片的文字，随便写](head.jpeg)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
